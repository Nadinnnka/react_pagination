{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","pagesCount","Math","ceil","firstPage","lastPage","pages","_jsxs","className","children","_jsx","classNames","disabled","href","onClick","handlePrevClick","map","page","active","concat","handlPageClick","handleNextClick","items","App","setCurrentPage","useState","setPerPage","length","firstIndex","lastIndex","currentItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"4JAAO,SAASA,EAAWC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGF,MAAMG,EAAaC,IAKZ,IALa,MACzBC,EAAK,QACLC,EAAO,YACPC,EAAW,aACXC,GACMJ,EACN,MAAMK,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAA4B,IAAhBL,EACZM,EAAWN,IAAgBE,EAC3BK,EAAQjB,EAAW,EAAGY,GAoB5B,OACEM,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAWG,IAAW,YAAa,CAAEC,SAAUR,IAAaK,SAC9DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAeT,EACfU,QApBgBC,KACjBX,GACHJ,EAAaD,EAAc,IAkBEU,SAC1B,WAIFH,EAAMU,KAAIC,GACTP,cAAA,MAEEF,UAAWG,IAAW,YAAa,CAAEO,OAAQD,IAASlB,IAAeU,SAErEC,cAAA,KACEG,KAAI,IAAAM,OAAMF,GACV,UAAQ,WACRT,UAAU,YACVM,QAASA,IAxCKG,KAClBA,IAASlB,GACXC,EAAaiB,IAsCQG,CAAeH,GAAMR,SAEnCQ,KATEA,KAaTP,cAAA,MAAIF,UAAWG,IAAW,YAAa,CAAEC,SAAUP,IAAYI,SAC7DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAeR,EACfS,QAxCgBO,KACjBhB,GACHL,EAAaD,EAAc,IAsCEU,SAC1B,eCrEHa,EAAQjC,EAAW,EAAG,IAAI2B,KAAIvB,GAAC,QAAA0B,OAAY1B,KAEpC8B,EAAgBA,KAC3B,MAAOxB,EAAayB,GAAkBC,mBAAS,IACxC3B,EAAS4B,GAAcD,mBAAS,GAEjC5B,EAAQyB,EAAMK,OAEdC,GAAc7B,EAAc,GAAKD,EACjC+B,EACJ9B,EAAcD,EAAUD,EAAQA,EAAQE,EAAcD,EAElDgC,EAAeR,EAAMS,MAAMH,EAAYC,GAO7C,OACEtB,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJC,cAAA,KAAGF,UAAU,OAAO,UAAQ,OAAMC,SAAA,QAAAU,OACvBpB,EAAW,YAAAoB,OAAWS,EAAa,EAAC,OAAAT,OAAMU,EAAS,QAAAV,OAAOtB,EAAK,OAG1EU,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCF,eAAA,UACE,UAAQ,kBACRyB,GAAG,kBACHxB,UAAU,eACVyB,MAAOnC,EACPoC,SApBaC,IACrBT,GAAYS,EAAMC,OAAOH,OACzBT,EAAe,IAkBiBf,SAAA,CAExBC,cAAA,UAAQuB,MAAM,IAAGxB,SAAC,MAClBC,cAAA,UAAQuB,MAAM,IAAGxB,SAAC,MAClBC,cAAA,UAAQuB,MAAM,KAAIxB,SAAC,OACnBC,cAAA,UAAQuB,MAAM,KAAIxB,SAAC,YAIvBC,cAAA,SAAO2B,QAAQ,kBAAkB7B,UAAU,qBAAoBC,SAAC,sBAIlEC,cAACf,EAAU,CACTE,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAeiB,GAAiBO,EAAeP,KAEjDP,cAAA,MAAAD,SACGqB,EAAad,KAAIsB,GAChB5B,cAAA,MAAI,UAAQ,OAAMD,SACf6B,GADqBA,WCzDlCC,IAASC,OAAO9B,cAACa,EAAG,IAAKkB,SAASC,eAAe,U","file":"static/js/main.2be0d0c3.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from \"classnames\";\nimport { getNumbers } from \"../../utils\";\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}: Props) => {\n  const pagesCount = Math.ceil(total / perPage);\n  const firstPage = currentPage === 1;\n  const lastPage = currentPage === pagesCount;\n  const pages = getNumbers(1, pagesCount);\n\n  const handlPageClick = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const handlePrevClick = () => {\n    if (!firstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextClick = () => {\n    if (!lastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\"page-item\", { disabled: firstPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={firstPage}\n          onClick={handlePrevClick}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          key={page}\n          className={classNames(\"page-item\", { active: page === currentPage })}\n        >\n          <a\n            href={`#${page}`}\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            onClick={() => handlPageClick(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={classNames(\"page-item\", { disabled: lastPage })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={lastPage}\n          onClick={handleNextClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { getNumbers } from \"./utils\";\nimport { Pagination } from \"./components/Pagination\";\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const total = items.length;\n\n  const firstIndex = (currentPage - 1) * perPage;\n  const lastIndex =\n    currentPage * perPage > total ? total : currentPage * perPage;\n\n  const currentItems = items.slice(firstIndex, lastIndex);\n\n  const handlePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstIndex + 1} - ${lastIndex} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page: number) => setCurrentPage(page)}\n      />\n      <ul>\n        {currentItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}